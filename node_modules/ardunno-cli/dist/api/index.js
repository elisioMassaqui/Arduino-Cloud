"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DownloadProgress = exports.Instance = exports.ArduinoCoreServiceDefinition = exports.SetSketchDefaultsResponse = exports.SetSketchDefaultsRequest = exports.ArchiveSketchResponse = exports.ArchiveSketchRequest = exports.LoadSketchResponse = exports.SketchProfile = exports.LoadSketchRequest = exports.NewSketchResponse = exports.NewSketchRequest = exports.VersionResponse = exports.VersionRequest = exports.UpdateLibrariesIndexResponse = exports.UpdateLibrariesIndexRequest = exports.UpdateIndexResponse = exports.UpdateIndexRequest = exports.DestroyResponse = exports.DestroyRequest = exports.FailedInstanceInitError = exports.InitResponse_Progress = exports.InitResponse = exports.InitRequest = exports.CreateResponse = exports.CreateRequest = exports.FailedInstanceInitReason = exports.failedInstanceInitReasonToJSON = exports.failedInstanceInitReasonFromJSON = exports.BoardSearchResponse = exports.BoardSearchRequest = exports.BoardListItem = exports.BoardListWatchResponse = exports.BoardListWatchRequest = exports.BoardListAllResponse = exports.BoardListAllRequest = exports.DetectedPort = exports.BoardListResponse = exports.BoardListRequest = exports.ConfigValue = exports.ConfigOption = exports.Systems = exports.ToolsDependencies = exports.BoardPlatform = exports.Help = exports.Package = exports.BoardIdentificationProperties_PropertiesEntry = exports.BoardIdentificationProperties = exports.BoardDetailsResponse = exports.BoardDetailsRequest = void 0;
exports.LibraryLocation = exports.LibraryLayout = exports.LibrarySearchStatus = exports.LibraryInstallLocation = exports.libraryLocationToJSON = exports.libraryLocationFromJSON = exports.libraryLayoutToJSON = exports.libraryLayoutFromJSON = exports.librarySearchStatusToJSON = exports.librarySearchStatusFromJSON = exports.libraryInstallLocationToJSON = exports.libraryInstallLocationFromJSON = exports.DebugOpenOCDServerConfiguration = exports.DebugGCCToolchainConfiguration = exports.GetDebugConfigResponse_CustomConfigsEntry = exports.GetDebugConfigResponse = exports.GetDebugConfigRequest = exports.IsDebugSupportedResponse = exports.IsDebugSupportedRequest = exports.DebugResponse = exports.DebugRequest = exports.PlatformListResponse = exports.PlatformListRequest = exports.PlatformSearchResponse = exports.PlatformSearchRequest = exports.PlatformUpgradeResponse = exports.PlatformUpgradeRequest = exports.AlreadyAtLatestVersionError = exports.PlatformUninstallResponse = exports.PlatformUninstallRequest = exports.PlatformDownloadResponse = exports.PlatformDownloadRequest = exports.PlatformLoadingError = exports.PlatformInstallResponse = exports.PlatformInstallRequest = exports.ExecutableSectionSize = exports.CompileResponse = exports.CompileRequest_SourceOverrideEntry = exports.CompileRequest = exports.HelpResources = exports.Profile = exports.Board = exports.InstalledPlatformReference = exports.Platform = exports.MissingProgrammerError = exports.Programmer = exports.TaskProgress = exports.DownloadProgressEnd = exports.DownloadProgressUpdate = exports.DownloadProgressStart = void 0;
exports.BurnBootloaderResponse = exports.BurnBootloaderRequest_UserFieldsEntry = exports.BurnBootloaderRequest = exports.UploadUsingProgrammerResponse = exports.UploadUsingProgrammerRequest_UserFieldsEntry = exports.UploadUsingProgrammerRequest = exports.ProgrammerIsRequiredForUploadError = exports.UploadResult = exports.UploadResponse = exports.UploadRequest_UserFieldsEntry = exports.UploadRequest = exports.Port_PropertiesEntry = exports.Port = exports.MonitorPortSettingDescriptor = exports.EnumerateMonitorPortSettingsResponse = exports.EnumerateMonitorPortSettingsRequest = exports.MonitorPortSetting = exports.MonitorResponse = exports.MonitorPortConfiguration = exports.MonitorRequest = exports.GitLibraryInstallResponse = exports.GitLibraryInstallRequest = exports.ZipLibraryInstallResponse = exports.ZipLibraryInstallRequest = exports.Library_CompatibleWithEntry = exports.Library_PropertiesEntry = exports.Library = exports.InstalledLibrary = exports.LibraryListResponse = exports.LibraryListRequest = exports.DownloadResource = exports.LibraryDependency = exports.LibraryRelease = exports.SearchedLibrary_ReleasesEntry = exports.SearchedLibrary = exports.LibrarySearchResponse = exports.LibrarySearchRequest = exports.LibraryDependencyStatus = exports.LibraryResolveDependenciesResponse = exports.LibraryResolveDependenciesRequest = exports.LibraryUpgradeAllResponse = exports.LibraryUpgradeAllRequest = exports.LibraryUninstallResponse = exports.LibraryUninstallRequest = exports.LibraryUpgradeResponse = exports.LibraryUpgradeRequest = exports.LibraryInstallResponse = exports.LibraryInstallRequest = exports.LibraryDownloadResponse = exports.LibraryDownloadRequest = void 0;
exports.Status = exports.BytesValue = exports.StringValue = exports.BoolValue = exports.UInt32Value = exports.Int32Value = exports.UInt64Value = exports.Int64Value = exports.FloatValue = exports.DoubleValue = exports.Any = exports.SettingsServiceDefinition = exports.DeleteResponse = exports.DeleteRequest = exports.WriteResponse = exports.WriteRequest = exports.SetValueResponse = exports.MergeResponse = exports.GetValueRequest = exports.GetAllRequest = exports.SetValueRequest = exports.GetValueResponse = exports.MergeRequest = exports.GetAllResponse = exports.SupportedUserFieldsResponse = exports.UserField = exports.SupportedUserFieldsRequest = exports.ListProgrammersAvailableForUploadResponse = exports.ListProgrammersAvailableForUploadRequest = void 0;
var board_1 = require("./cc/arduino/cli/commands/v1/board");
Object.defineProperty(exports, "BoardDetailsRequest", { enumerable: true, get: function () { return board_1.BoardDetailsRequest; } });
Object.defineProperty(exports, "BoardDetailsResponse", { enumerable: true, get: function () { return board_1.BoardDetailsResponse; } });
Object.defineProperty(exports, "BoardIdentificationProperties", { enumerable: true, get: function () { return board_1.BoardIdentificationProperties; } });
Object.defineProperty(exports, "BoardIdentificationProperties_PropertiesEntry", { enumerable: true, get: function () { return board_1.BoardIdentificationProperties_PropertiesEntry; } });
Object.defineProperty(exports, "Package", { enumerable: true, get: function () { return board_1.Package; } });
Object.defineProperty(exports, "Help", { enumerable: true, get: function () { return board_1.Help; } });
Object.defineProperty(exports, "BoardPlatform", { enumerable: true, get: function () { return board_1.BoardPlatform; } });
Object.defineProperty(exports, "ToolsDependencies", { enumerable: true, get: function () { return board_1.ToolsDependencies; } });
Object.defineProperty(exports, "Systems", { enumerable: true, get: function () { return board_1.Systems; } });
Object.defineProperty(exports, "ConfigOption", { enumerable: true, get: function () { return board_1.ConfigOption; } });
Object.defineProperty(exports, "ConfigValue", { enumerable: true, get: function () { return board_1.ConfigValue; } });
Object.defineProperty(exports, "BoardListRequest", { enumerable: true, get: function () { return board_1.BoardListRequest; } });
Object.defineProperty(exports, "BoardListResponse", { enumerable: true, get: function () { return board_1.BoardListResponse; } });
Object.defineProperty(exports, "DetectedPort", { enumerable: true, get: function () { return board_1.DetectedPort; } });
Object.defineProperty(exports, "BoardListAllRequest", { enumerable: true, get: function () { return board_1.BoardListAllRequest; } });
Object.defineProperty(exports, "BoardListAllResponse", { enumerable: true, get: function () { return board_1.BoardListAllResponse; } });
Object.defineProperty(exports, "BoardListWatchRequest", { enumerable: true, get: function () { return board_1.BoardListWatchRequest; } });
Object.defineProperty(exports, "BoardListWatchResponse", { enumerable: true, get: function () { return board_1.BoardListWatchResponse; } });
Object.defineProperty(exports, "BoardListItem", { enumerable: true, get: function () { return board_1.BoardListItem; } });
Object.defineProperty(exports, "BoardSearchRequest", { enumerable: true, get: function () { return board_1.BoardSearchRequest; } });
Object.defineProperty(exports, "BoardSearchResponse", { enumerable: true, get: function () { return board_1.BoardSearchResponse; } });
var commands_1 = require("./cc/arduino/cli/commands/v1/commands");
Object.defineProperty(exports, "failedInstanceInitReasonFromJSON", { enumerable: true, get: function () { return commands_1.failedInstanceInitReasonFromJSON; } });
Object.defineProperty(exports, "failedInstanceInitReasonToJSON", { enumerable: true, get: function () { return commands_1.failedInstanceInitReasonToJSON; } });
Object.defineProperty(exports, "FailedInstanceInitReason", { enumerable: true, get: function () { return commands_1.FailedInstanceInitReason; } });
Object.defineProperty(exports, "CreateRequest", { enumerable: true, get: function () { return commands_1.CreateRequest; } });
Object.defineProperty(exports, "CreateResponse", { enumerable: true, get: function () { return commands_1.CreateResponse; } });
Object.defineProperty(exports, "InitRequest", { enumerable: true, get: function () { return commands_1.InitRequest; } });
Object.defineProperty(exports, "InitResponse", { enumerable: true, get: function () { return commands_1.InitResponse; } });
Object.defineProperty(exports, "InitResponse_Progress", { enumerable: true, get: function () { return commands_1.InitResponse_Progress; } });
Object.defineProperty(exports, "FailedInstanceInitError", { enumerable: true, get: function () { return commands_1.FailedInstanceInitError; } });
Object.defineProperty(exports, "DestroyRequest", { enumerable: true, get: function () { return commands_1.DestroyRequest; } });
Object.defineProperty(exports, "DestroyResponse", { enumerable: true, get: function () { return commands_1.DestroyResponse; } });
Object.defineProperty(exports, "UpdateIndexRequest", { enumerable: true, get: function () { return commands_1.UpdateIndexRequest; } });
Object.defineProperty(exports, "UpdateIndexResponse", { enumerable: true, get: function () { return commands_1.UpdateIndexResponse; } });
Object.defineProperty(exports, "UpdateLibrariesIndexRequest", { enumerable: true, get: function () { return commands_1.UpdateLibrariesIndexRequest; } });
Object.defineProperty(exports, "UpdateLibrariesIndexResponse", { enumerable: true, get: function () { return commands_1.UpdateLibrariesIndexResponse; } });
Object.defineProperty(exports, "VersionRequest", { enumerable: true, get: function () { return commands_1.VersionRequest; } });
Object.defineProperty(exports, "VersionResponse", { enumerable: true, get: function () { return commands_1.VersionResponse; } });
Object.defineProperty(exports, "NewSketchRequest", { enumerable: true, get: function () { return commands_1.NewSketchRequest; } });
Object.defineProperty(exports, "NewSketchResponse", { enumerable: true, get: function () { return commands_1.NewSketchResponse; } });
Object.defineProperty(exports, "LoadSketchRequest", { enumerable: true, get: function () { return commands_1.LoadSketchRequest; } });
Object.defineProperty(exports, "SketchProfile", { enumerable: true, get: function () { return commands_1.SketchProfile; } });
Object.defineProperty(exports, "LoadSketchResponse", { enumerable: true, get: function () { return commands_1.LoadSketchResponse; } });
Object.defineProperty(exports, "ArchiveSketchRequest", { enumerable: true, get: function () { return commands_1.ArchiveSketchRequest; } });
Object.defineProperty(exports, "ArchiveSketchResponse", { enumerable: true, get: function () { return commands_1.ArchiveSketchResponse; } });
Object.defineProperty(exports, "SetSketchDefaultsRequest", { enumerable: true, get: function () { return commands_1.SetSketchDefaultsRequest; } });
Object.defineProperty(exports, "SetSketchDefaultsResponse", { enumerable: true, get: function () { return commands_1.SetSketchDefaultsResponse; } });
Object.defineProperty(exports, "ArduinoCoreServiceDefinition", { enumerable: true, get: function () { return commands_1.ArduinoCoreServiceDefinition; } });
var common_1 = require("./cc/arduino/cli/commands/v1/common");
Object.defineProperty(exports, "Instance", { enumerable: true, get: function () { return common_1.Instance; } });
Object.defineProperty(exports, "DownloadProgress", { enumerable: true, get: function () { return common_1.DownloadProgress; } });
Object.defineProperty(exports, "DownloadProgressStart", { enumerable: true, get: function () { return common_1.DownloadProgressStart; } });
Object.defineProperty(exports, "DownloadProgressUpdate", { enumerable: true, get: function () { return common_1.DownloadProgressUpdate; } });
Object.defineProperty(exports, "DownloadProgressEnd", { enumerable: true, get: function () { return common_1.DownloadProgressEnd; } });
Object.defineProperty(exports, "TaskProgress", { enumerable: true, get: function () { return common_1.TaskProgress; } });
Object.defineProperty(exports, "Programmer", { enumerable: true, get: function () { return common_1.Programmer; } });
Object.defineProperty(exports, "MissingProgrammerError", { enumerable: true, get: function () { return common_1.MissingProgrammerError; } });
Object.defineProperty(exports, "Platform", { enumerable: true, get: function () { return common_1.Platform; } });
Object.defineProperty(exports, "InstalledPlatformReference", { enumerable: true, get: function () { return common_1.InstalledPlatformReference; } });
Object.defineProperty(exports, "Board", { enumerable: true, get: function () { return common_1.Board; } });
Object.defineProperty(exports, "Profile", { enumerable: true, get: function () { return common_1.Profile; } });
Object.defineProperty(exports, "HelpResources", { enumerable: true, get: function () { return common_1.HelpResources; } });
var compile_1 = require("./cc/arduino/cli/commands/v1/compile");
Object.defineProperty(exports, "CompileRequest", { enumerable: true, get: function () { return compile_1.CompileRequest; } });
Object.defineProperty(exports, "CompileRequest_SourceOverrideEntry", { enumerable: true, get: function () { return compile_1.CompileRequest_SourceOverrideEntry; } });
Object.defineProperty(exports, "CompileResponse", { enumerable: true, get: function () { return compile_1.CompileResponse; } });
Object.defineProperty(exports, "ExecutableSectionSize", { enumerable: true, get: function () { return compile_1.ExecutableSectionSize; } });
var core_1 = require("./cc/arduino/cli/commands/v1/core");
Object.defineProperty(exports, "PlatformInstallRequest", { enumerable: true, get: function () { return core_1.PlatformInstallRequest; } });
Object.defineProperty(exports, "PlatformInstallResponse", { enumerable: true, get: function () { return core_1.PlatformInstallResponse; } });
Object.defineProperty(exports, "PlatformLoadingError", { enumerable: true, get: function () { return core_1.PlatformLoadingError; } });
Object.defineProperty(exports, "PlatformDownloadRequest", { enumerable: true, get: function () { return core_1.PlatformDownloadRequest; } });
Object.defineProperty(exports, "PlatformDownloadResponse", { enumerable: true, get: function () { return core_1.PlatformDownloadResponse; } });
Object.defineProperty(exports, "PlatformUninstallRequest", { enumerable: true, get: function () { return core_1.PlatformUninstallRequest; } });
Object.defineProperty(exports, "PlatformUninstallResponse", { enumerable: true, get: function () { return core_1.PlatformUninstallResponse; } });
Object.defineProperty(exports, "AlreadyAtLatestVersionError", { enumerable: true, get: function () { return core_1.AlreadyAtLatestVersionError; } });
Object.defineProperty(exports, "PlatformUpgradeRequest", { enumerable: true, get: function () { return core_1.PlatformUpgradeRequest; } });
Object.defineProperty(exports, "PlatformUpgradeResponse", { enumerable: true, get: function () { return core_1.PlatformUpgradeResponse; } });
Object.defineProperty(exports, "PlatformSearchRequest", { enumerable: true, get: function () { return core_1.PlatformSearchRequest; } });
Object.defineProperty(exports, "PlatformSearchResponse", { enumerable: true, get: function () { return core_1.PlatformSearchResponse; } });
Object.defineProperty(exports, "PlatformListRequest", { enumerable: true, get: function () { return core_1.PlatformListRequest; } });
Object.defineProperty(exports, "PlatformListResponse", { enumerable: true, get: function () { return core_1.PlatformListResponse; } });
var debug_1 = require("./cc/arduino/cli/commands/v1/debug");
Object.defineProperty(exports, "DebugRequest", { enumerable: true, get: function () { return debug_1.DebugRequest; } });
Object.defineProperty(exports, "DebugResponse", { enumerable: true, get: function () { return debug_1.DebugResponse; } });
Object.defineProperty(exports, "IsDebugSupportedRequest", { enumerable: true, get: function () { return debug_1.IsDebugSupportedRequest; } });
Object.defineProperty(exports, "IsDebugSupportedResponse", { enumerable: true, get: function () { return debug_1.IsDebugSupportedResponse; } });
Object.defineProperty(exports, "GetDebugConfigRequest", { enumerable: true, get: function () { return debug_1.GetDebugConfigRequest; } });
Object.defineProperty(exports, "GetDebugConfigResponse", { enumerable: true, get: function () { return debug_1.GetDebugConfigResponse; } });
Object.defineProperty(exports, "GetDebugConfigResponse_CustomConfigsEntry", { enumerable: true, get: function () { return debug_1.GetDebugConfigResponse_CustomConfigsEntry; } });
Object.defineProperty(exports, "DebugGCCToolchainConfiguration", { enumerable: true, get: function () { return debug_1.DebugGCCToolchainConfiguration; } });
Object.defineProperty(exports, "DebugOpenOCDServerConfiguration", { enumerable: true, get: function () { return debug_1.DebugOpenOCDServerConfiguration; } });
var lib_1 = require("./cc/arduino/cli/commands/v1/lib");
Object.defineProperty(exports, "libraryInstallLocationFromJSON", { enumerable: true, get: function () { return lib_1.libraryInstallLocationFromJSON; } });
Object.defineProperty(exports, "libraryInstallLocationToJSON", { enumerable: true, get: function () { return lib_1.libraryInstallLocationToJSON; } });
Object.defineProperty(exports, "librarySearchStatusFromJSON", { enumerable: true, get: function () { return lib_1.librarySearchStatusFromJSON; } });
Object.defineProperty(exports, "librarySearchStatusToJSON", { enumerable: true, get: function () { return lib_1.librarySearchStatusToJSON; } });
Object.defineProperty(exports, "libraryLayoutFromJSON", { enumerable: true, get: function () { return lib_1.libraryLayoutFromJSON; } });
Object.defineProperty(exports, "libraryLayoutToJSON", { enumerable: true, get: function () { return lib_1.libraryLayoutToJSON; } });
Object.defineProperty(exports, "libraryLocationFromJSON", { enumerable: true, get: function () { return lib_1.libraryLocationFromJSON; } });
Object.defineProperty(exports, "libraryLocationToJSON", { enumerable: true, get: function () { return lib_1.libraryLocationToJSON; } });
Object.defineProperty(exports, "LibraryInstallLocation", { enumerable: true, get: function () { return lib_1.LibraryInstallLocation; } });
Object.defineProperty(exports, "LibrarySearchStatus", { enumerable: true, get: function () { return lib_1.LibrarySearchStatus; } });
Object.defineProperty(exports, "LibraryLayout", { enumerable: true, get: function () { return lib_1.LibraryLayout; } });
Object.defineProperty(exports, "LibraryLocation", { enumerable: true, get: function () { return lib_1.LibraryLocation; } });
Object.defineProperty(exports, "LibraryDownloadRequest", { enumerable: true, get: function () { return lib_1.LibraryDownloadRequest; } });
Object.defineProperty(exports, "LibraryDownloadResponse", { enumerable: true, get: function () { return lib_1.LibraryDownloadResponse; } });
Object.defineProperty(exports, "LibraryInstallRequest", { enumerable: true, get: function () { return lib_1.LibraryInstallRequest; } });
Object.defineProperty(exports, "LibraryInstallResponse", { enumerable: true, get: function () { return lib_1.LibraryInstallResponse; } });
Object.defineProperty(exports, "LibraryUpgradeRequest", { enumerable: true, get: function () { return lib_1.LibraryUpgradeRequest; } });
Object.defineProperty(exports, "LibraryUpgradeResponse", { enumerable: true, get: function () { return lib_1.LibraryUpgradeResponse; } });
Object.defineProperty(exports, "LibraryUninstallRequest", { enumerable: true, get: function () { return lib_1.LibraryUninstallRequest; } });
Object.defineProperty(exports, "LibraryUninstallResponse", { enumerable: true, get: function () { return lib_1.LibraryUninstallResponse; } });
Object.defineProperty(exports, "LibraryUpgradeAllRequest", { enumerable: true, get: function () { return lib_1.LibraryUpgradeAllRequest; } });
Object.defineProperty(exports, "LibraryUpgradeAllResponse", { enumerable: true, get: function () { return lib_1.LibraryUpgradeAllResponse; } });
Object.defineProperty(exports, "LibraryResolveDependenciesRequest", { enumerable: true, get: function () { return lib_1.LibraryResolveDependenciesRequest; } });
Object.defineProperty(exports, "LibraryResolveDependenciesResponse", { enumerable: true, get: function () { return lib_1.LibraryResolveDependenciesResponse; } });
Object.defineProperty(exports, "LibraryDependencyStatus", { enumerable: true, get: function () { return lib_1.LibraryDependencyStatus; } });
Object.defineProperty(exports, "LibrarySearchRequest", { enumerable: true, get: function () { return lib_1.LibrarySearchRequest; } });
Object.defineProperty(exports, "LibrarySearchResponse", { enumerable: true, get: function () { return lib_1.LibrarySearchResponse; } });
Object.defineProperty(exports, "SearchedLibrary", { enumerable: true, get: function () { return lib_1.SearchedLibrary; } });
Object.defineProperty(exports, "SearchedLibrary_ReleasesEntry", { enumerable: true, get: function () { return lib_1.SearchedLibrary_ReleasesEntry; } });
Object.defineProperty(exports, "LibraryRelease", { enumerable: true, get: function () { return lib_1.LibraryRelease; } });
Object.defineProperty(exports, "LibraryDependency", { enumerable: true, get: function () { return lib_1.LibraryDependency; } });
Object.defineProperty(exports, "DownloadResource", { enumerable: true, get: function () { return lib_1.DownloadResource; } });
Object.defineProperty(exports, "LibraryListRequest", { enumerable: true, get: function () { return lib_1.LibraryListRequest; } });
Object.defineProperty(exports, "LibraryListResponse", { enumerable: true, get: function () { return lib_1.LibraryListResponse; } });
Object.defineProperty(exports, "InstalledLibrary", { enumerable: true, get: function () { return lib_1.InstalledLibrary; } });
Object.defineProperty(exports, "Library", { enumerable: true, get: function () { return lib_1.Library; } });
Object.defineProperty(exports, "Library_PropertiesEntry", { enumerable: true, get: function () { return lib_1.Library_PropertiesEntry; } });
Object.defineProperty(exports, "Library_CompatibleWithEntry", { enumerable: true, get: function () { return lib_1.Library_CompatibleWithEntry; } });
Object.defineProperty(exports, "ZipLibraryInstallRequest", { enumerable: true, get: function () { return lib_1.ZipLibraryInstallRequest; } });
Object.defineProperty(exports, "ZipLibraryInstallResponse", { enumerable: true, get: function () { return lib_1.ZipLibraryInstallResponse; } });
Object.defineProperty(exports, "GitLibraryInstallRequest", { enumerable: true, get: function () { return lib_1.GitLibraryInstallRequest; } });
Object.defineProperty(exports, "GitLibraryInstallResponse", { enumerable: true, get: function () { return lib_1.GitLibraryInstallResponse; } });
var monitor_1 = require("./cc/arduino/cli/commands/v1/monitor");
Object.defineProperty(exports, "MonitorRequest", { enumerable: true, get: function () { return monitor_1.MonitorRequest; } });
Object.defineProperty(exports, "MonitorPortConfiguration", { enumerable: true, get: function () { return monitor_1.MonitorPortConfiguration; } });
Object.defineProperty(exports, "MonitorResponse", { enumerable: true, get: function () { return monitor_1.MonitorResponse; } });
Object.defineProperty(exports, "MonitorPortSetting", { enumerable: true, get: function () { return monitor_1.MonitorPortSetting; } });
Object.defineProperty(exports, "EnumerateMonitorPortSettingsRequest", { enumerable: true, get: function () { return monitor_1.EnumerateMonitorPortSettingsRequest; } });
Object.defineProperty(exports, "EnumerateMonitorPortSettingsResponse", { enumerable: true, get: function () { return monitor_1.EnumerateMonitorPortSettingsResponse; } });
Object.defineProperty(exports, "MonitorPortSettingDescriptor", { enumerable: true, get: function () { return monitor_1.MonitorPortSettingDescriptor; } });
var port_1 = require("./cc/arduino/cli/commands/v1/port");
Object.defineProperty(exports, "Port", { enumerable: true, get: function () { return port_1.Port; } });
Object.defineProperty(exports, "Port_PropertiesEntry", { enumerable: true, get: function () { return port_1.Port_PropertiesEntry; } });
var upload_1 = require("./cc/arduino/cli/commands/v1/upload");
Object.defineProperty(exports, "UploadRequest", { enumerable: true, get: function () { return upload_1.UploadRequest; } });
Object.defineProperty(exports, "UploadRequest_UserFieldsEntry", { enumerable: true, get: function () { return upload_1.UploadRequest_UserFieldsEntry; } });
Object.defineProperty(exports, "UploadResponse", { enumerable: true, get: function () { return upload_1.UploadResponse; } });
Object.defineProperty(exports, "UploadResult", { enumerable: true, get: function () { return upload_1.UploadResult; } });
Object.defineProperty(exports, "ProgrammerIsRequiredForUploadError", { enumerable: true, get: function () { return upload_1.ProgrammerIsRequiredForUploadError; } });
Object.defineProperty(exports, "UploadUsingProgrammerRequest", { enumerable: true, get: function () { return upload_1.UploadUsingProgrammerRequest; } });
Object.defineProperty(exports, "UploadUsingProgrammerRequest_UserFieldsEntry", { enumerable: true, get: function () { return upload_1.UploadUsingProgrammerRequest_UserFieldsEntry; } });
Object.defineProperty(exports, "UploadUsingProgrammerResponse", { enumerable: true, get: function () { return upload_1.UploadUsingProgrammerResponse; } });
Object.defineProperty(exports, "BurnBootloaderRequest", { enumerable: true, get: function () { return upload_1.BurnBootloaderRequest; } });
Object.defineProperty(exports, "BurnBootloaderRequest_UserFieldsEntry", { enumerable: true, get: function () { return upload_1.BurnBootloaderRequest_UserFieldsEntry; } });
Object.defineProperty(exports, "BurnBootloaderResponse", { enumerable: true, get: function () { return upload_1.BurnBootloaderResponse; } });
Object.defineProperty(exports, "ListProgrammersAvailableForUploadRequest", { enumerable: true, get: function () { return upload_1.ListProgrammersAvailableForUploadRequest; } });
Object.defineProperty(exports, "ListProgrammersAvailableForUploadResponse", { enumerable: true, get: function () { return upload_1.ListProgrammersAvailableForUploadResponse; } });
Object.defineProperty(exports, "SupportedUserFieldsRequest", { enumerable: true, get: function () { return upload_1.SupportedUserFieldsRequest; } });
Object.defineProperty(exports, "UserField", { enumerable: true, get: function () { return upload_1.UserField; } });
Object.defineProperty(exports, "SupportedUserFieldsResponse", { enumerable: true, get: function () { return upload_1.SupportedUserFieldsResponse; } });
var settings_1 = require("./cc/arduino/cli/settings/v1/settings");
Object.defineProperty(exports, "GetAllResponse", { enumerable: true, get: function () { return settings_1.GetAllResponse; } });
Object.defineProperty(exports, "MergeRequest", { enumerable: true, get: function () { return settings_1.MergeRequest; } });
Object.defineProperty(exports, "GetValueResponse", { enumerable: true, get: function () { return settings_1.GetValueResponse; } });
Object.defineProperty(exports, "SetValueRequest", { enumerable: true, get: function () { return settings_1.SetValueRequest; } });
Object.defineProperty(exports, "GetAllRequest", { enumerable: true, get: function () { return settings_1.GetAllRequest; } });
Object.defineProperty(exports, "GetValueRequest", { enumerable: true, get: function () { return settings_1.GetValueRequest; } });
Object.defineProperty(exports, "MergeResponse", { enumerable: true, get: function () { return settings_1.MergeResponse; } });
Object.defineProperty(exports, "SetValueResponse", { enumerable: true, get: function () { return settings_1.SetValueResponse; } });
Object.defineProperty(exports, "WriteRequest", { enumerable: true, get: function () { return settings_1.WriteRequest; } });
Object.defineProperty(exports, "WriteResponse", { enumerable: true, get: function () { return settings_1.WriteResponse; } });
Object.defineProperty(exports, "DeleteRequest", { enumerable: true, get: function () { return settings_1.DeleteRequest; } });
Object.defineProperty(exports, "DeleteResponse", { enumerable: true, get: function () { return settings_1.DeleteResponse; } });
Object.defineProperty(exports, "SettingsServiceDefinition", { enumerable: true, get: function () { return settings_1.SettingsServiceDefinition; } });
var any_1 = require("./google/protobuf/any");
Object.defineProperty(exports, "Any", { enumerable: true, get: function () { return any_1.Any; } });
var wrappers_1 = require("./google/protobuf/wrappers");
Object.defineProperty(exports, "DoubleValue", { enumerable: true, get: function () { return wrappers_1.DoubleValue; } });
Object.defineProperty(exports, "FloatValue", { enumerable: true, get: function () { return wrappers_1.FloatValue; } });
Object.defineProperty(exports, "Int64Value", { enumerable: true, get: function () { return wrappers_1.Int64Value; } });
Object.defineProperty(exports, "UInt64Value", { enumerable: true, get: function () { return wrappers_1.UInt64Value; } });
Object.defineProperty(exports, "Int32Value", { enumerable: true, get: function () { return wrappers_1.Int32Value; } });
Object.defineProperty(exports, "UInt32Value", { enumerable: true, get: function () { return wrappers_1.UInt32Value; } });
Object.defineProperty(exports, "BoolValue", { enumerable: true, get: function () { return wrappers_1.BoolValue; } });
Object.defineProperty(exports, "StringValue", { enumerable: true, get: function () { return wrappers_1.StringValue; } });
Object.defineProperty(exports, "BytesValue", { enumerable: true, get: function () { return wrappers_1.BytesValue; } });
var status_1 = require("./google/rpc/status");
Object.defineProperty(exports, "Status", { enumerable: true, get: function () { return status_1.Status; } });
