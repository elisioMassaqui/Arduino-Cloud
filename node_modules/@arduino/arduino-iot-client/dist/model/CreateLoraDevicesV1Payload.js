"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Arduino IoT Cloud API
                                                                                                                                                                                                                                                                                                                                                                                               *  Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 2.0
                                                                                                                                                                                                                                                                                                                                                                                               * 
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The CreateLoraDevicesV1Payload model module.
 * @module model/CreateLoraDevicesV1Payload
 * @version 2.0.0
 */
var CreateLoraDevicesV1Payload = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreateLoraDevicesV1Payload</code>.
   * @alias module:model/CreateLoraDevicesV1Payload
   * @param app {String} The app name
   * @param eui {String} The eui of the lora device
   * @param frequencyPlan {module:model/CreateLoraDevicesV1Payload.FrequencyPlanEnum} The frequency plan required by your country 
   * @param name {String} A common name for the device
   * @param type {module:model/CreateLoraDevicesV1Payload.TypeEnum} The type of device
   * @param userId {String} The id of the user. Can be the special string 'me'
   */
  function CreateLoraDevicesV1Payload(app, eui, frequencyPlan, name, type, userId) {
    _classCallCheck(this, CreateLoraDevicesV1Payload);
    CreateLoraDevicesV1Payload.initialize(this, app, eui, frequencyPlan, name, type, userId);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(CreateLoraDevicesV1Payload, null, [{
    key: "initialize",
    value: function initialize(obj, app, eui, frequencyPlan, name, type, userId) {
      obj['app'] = app;
      obj['eui'] = eui;
      obj['frequency_plan'] = frequencyPlan;
      obj['name'] = name;
      obj['type'] = type;
      obj['user_id'] = userId;
    }

    /**
     * Constructs a <code>CreateLoraDevicesV1Payload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateLoraDevicesV1Payload} obj Optional instance to populate.
     * @return {module:model/CreateLoraDevicesV1Payload} The populated <code>CreateLoraDevicesV1Payload</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateLoraDevicesV1Payload();
        if (data.hasOwnProperty('app')) {
          obj['app'] = _ApiClient["default"].convertToType(data['app'], 'String');
        }
        if (data.hasOwnProperty('app_eui')) {
          obj['app_eui'] = _ApiClient["default"].convertToType(data['app_eui'], 'String');
        }
        if (data.hasOwnProperty('app_key')) {
          obj['app_key'] = _ApiClient["default"].convertToType(data['app_key'], 'String');
        }
        if (data.hasOwnProperty('eui')) {
          obj['eui'] = _ApiClient["default"].convertToType(data['eui'], 'String');
        }
        if (data.hasOwnProperty('frequency_plan')) {
          obj['frequency_plan'] = _ApiClient["default"].convertToType(data['frequency_plan'], 'String');
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('serial')) {
          obj['serial'] = _ApiClient["default"].convertToType(data['serial'], 'String');
        }
        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('user_id')) {
          obj['user_id'] = _ApiClient["default"].convertToType(data['user_id'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateLoraDevicesV1Payload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateLoraDevicesV1Payload</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(CreateLoraDevicesV1Payload.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data[property]) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['app'] && !(typeof data['app'] === 'string' || data['app'] instanceof String)) {
        throw new Error("Expected the field `app` to be a primitive type in the JSON string but got " + data['app']);
      }
      // ensure the json data is a string
      if (data['app_eui'] && !(typeof data['app_eui'] === 'string' || data['app_eui'] instanceof String)) {
        throw new Error("Expected the field `app_eui` to be a primitive type in the JSON string but got " + data['app_eui']);
      }
      // ensure the json data is a string
      if (data['app_key'] && !(typeof data['app_key'] === 'string' || data['app_key'] instanceof String)) {
        throw new Error("Expected the field `app_key` to be a primitive type in the JSON string but got " + data['app_key']);
      }
      // ensure the json data is a string
      if (data['eui'] && !(typeof data['eui'] === 'string' || data['eui'] instanceof String)) {
        throw new Error("Expected the field `eui` to be a primitive type in the JSON string but got " + data['eui']);
      }
      // ensure the json data is a string
      if (data['frequency_plan'] && !(typeof data['frequency_plan'] === 'string' || data['frequency_plan'] instanceof String)) {
        throw new Error("Expected the field `frequency_plan` to be a primitive type in the JSON string but got " + data['frequency_plan']);
      }
      // ensure the json data is a string
      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      }
      // ensure the json data is a string
      if (data['serial'] && !(typeof data['serial'] === 'string' || data['serial'] instanceof String)) {
        throw new Error("Expected the field `serial` to be a primitive type in the JSON string but got " + data['serial']);
      }
      // ensure the json data is a string
      if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
        throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
      }
      // ensure the json data is a string
      if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
        throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
      }
      return true;
    }
  }]);
  return CreateLoraDevicesV1Payload;
}();
CreateLoraDevicesV1Payload.RequiredProperties = ["app", "eui", "frequency_plan", "name", "type", "user_id"];

/**
 * The app name
 * @member {String} app
 */
CreateLoraDevicesV1Payload.prototype['app'] = undefined;

/**
 * The app eui of the lora device
 * @member {String} app_eui
 */
CreateLoraDevicesV1Payload.prototype['app_eui'] = undefined;

/**
 * The app key of the lora device
 * @member {String} app_key
 */
CreateLoraDevicesV1Payload.prototype['app_key'] = undefined;

/**
 * The eui of the lora device
 * @member {String} eui
 */
CreateLoraDevicesV1Payload.prototype['eui'] = undefined;

/**
 * The frequency plan required by your country 
 * @member {module:model/CreateLoraDevicesV1Payload.FrequencyPlanEnum} frequency_plan
 */
CreateLoraDevicesV1Payload.prototype['frequency_plan'] = undefined;

/**
 * A common name for the device
 * @member {String} name
 */
CreateLoraDevicesV1Payload.prototype['name'] = undefined;

/**
 * The optional serial number
 * @member {String} serial
 */
CreateLoraDevicesV1Payload.prototype['serial'] = undefined;

/**
 * The type of device
 * @member {module:model/CreateLoraDevicesV1Payload.TypeEnum} type
 */
CreateLoraDevicesV1Payload.prototype['type'] = undefined;

/**
 * The id of the user. Can be the special string 'me'
 * @member {String} user_id
 */
CreateLoraDevicesV1Payload.prototype['user_id'] = undefined;

/**
 * Allowed values for the <code>frequency_plan</code> property.
 * @enum {String}
 * @readonly
 */
CreateLoraDevicesV1Payload['FrequencyPlanEnum'] = {
  /**
   * value: "EU_863_870_TTN"
   * @const
   */
  "EU_863_870_TTN": "EU_863_870_TTN",
  /**
   * value: "US_902_928_FSB_2"
   * @const
   */
  "US_902_928_FSB_2": "US_902_928_FSB_2",
  /**
   * value: "EU_433"
   * @const
   */
  "EU_433": "EU_433",
  /**
   * value: "AU_915_928_FSB_2"
   * @const
   */
  "AU_915_928_FSB_2": "AU_915_928_FSB_2",
  /**
   * value: "CN_470_510_FSB_11"
   * @const
   */
  "CN_470_510_FSB_11": "CN_470_510_FSB_11",
  /**
   * value: "AS_920_923"
   * @const
   */
  "AS_920_923": "AS_920_923",
  /**
   * value: "AS_920_923_TTN_AU"
   * @const
   */
  "AS_920_923_TTN_AU": "AS_920_923_TTN_AU",
  /**
   * value: "AS_923_925"
   * @const
   */
  "AS_923_925": "AS_923_925",
  /**
   * value: "AS_923_925_TTN_AU"
   * @const
   */
  "AS_923_925_TTN_AU": "AS_923_925_TTN_AU",
  /**
   * value: "KR_920_923_TTN"
   * @const
   */
  "KR_920_923_TTN": "KR_920_923_TTN",
  /**
   * value: "IN_865_867"
   * @const
   */
  "IN_865_867": "IN_865_867"
};

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CreateLoraDevicesV1Payload['TypeEnum'] = {
  /**
   * value: "lora-device"
   * @const
   */
  "lora-device": "lora-device",
  /**
   * value: "mkrwan1300"
   * @const
   */
  "mkrwan1300": "mkrwan1300",
  /**
   * value: "mkrwan1310"
   * @const
   */
  "mkrwan1310": "mkrwan1310"
};
var _default = exports["default"] = CreateLoraDevicesV1Payload;