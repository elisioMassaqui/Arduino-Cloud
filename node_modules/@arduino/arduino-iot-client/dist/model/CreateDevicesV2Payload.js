"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Arduino IoT Cloud API
                                                                                                                                                                                                                                                                                                                                                                                               *  Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 2.0
                                                                                                                                                                                                                                                                                                                                                                                               * 
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The CreateDevicesV2Payload model module.
 * @module model/CreateDevicesV2Payload
 * @version 2.0.0
 */
var CreateDevicesV2Payload = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreateDevicesV2Payload</code>.
   * DeviceV2 describes a device.
   * @alias module:model/CreateDevicesV2Payload
   * @param type {module:model/CreateDevicesV2Payload.TypeEnum} The type of the device
   */
  function CreateDevicesV2Payload(type) {
    _classCallCheck(this, CreateDevicesV2Payload);
    CreateDevicesV2Payload.initialize(this, type);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(CreateDevicesV2Payload, null, [{
    key: "initialize",
    value: function initialize(obj, type) {
      obj['type'] = type;
    }

    /**
     * Constructs a <code>CreateDevicesV2Payload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDevicesV2Payload} obj Optional instance to populate.
     * @return {module:model/CreateDevicesV2Payload} The populated <code>CreateDevicesV2Payload</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateDevicesV2Payload();
        if (data.hasOwnProperty('connection_type')) {
          obj['connection_type'] = _ApiClient["default"].convertToType(data['connection_type'], 'String');
        }
        if (data.hasOwnProperty('fqbn')) {
          obj['fqbn'] = _ApiClient["default"].convertToType(data['fqbn'], 'String');
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('serial')) {
          obj['serial'] = _ApiClient["default"].convertToType(data['serial'], 'String');
        }
        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('user_id')) {
          obj['user_id'] = _ApiClient["default"].convertToType(data['user_id'], 'String');
        }
        if (data.hasOwnProperty('wifi_fw_version')) {
          obj['wifi_fw_version'] = _ApiClient["default"].convertToType(data['wifi_fw_version'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDevicesV2Payload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDevicesV2Payload</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(CreateDevicesV2Payload.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data[property]) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['connection_type'] && !(typeof data['connection_type'] === 'string' || data['connection_type'] instanceof String)) {
        throw new Error("Expected the field `connection_type` to be a primitive type in the JSON string but got " + data['connection_type']);
      }
      // ensure the json data is a string
      if (data['fqbn'] && !(typeof data['fqbn'] === 'string' || data['fqbn'] instanceof String)) {
        throw new Error("Expected the field `fqbn` to be a primitive type in the JSON string but got " + data['fqbn']);
      }
      // ensure the json data is a string
      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      }
      // ensure the json data is a string
      if (data['serial'] && !(typeof data['serial'] === 'string' || data['serial'] instanceof String)) {
        throw new Error("Expected the field `serial` to be a primitive type in the JSON string but got " + data['serial']);
      }
      // ensure the json data is a string
      if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
        throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
      }
      // ensure the json data is a string
      if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
        throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
      }
      // ensure the json data is a string
      if (data['wifi_fw_version'] && !(typeof data['wifi_fw_version'] === 'string' || data['wifi_fw_version'] instanceof String)) {
        throw new Error("Expected the field `wifi_fw_version` to be a primitive type in the JSON string but got " + data['wifi_fw_version']);
      }
      return true;
    }
  }]);
  return CreateDevicesV2Payload;
}();
CreateDevicesV2Payload.RequiredProperties = ["type"];

/**
 * The type of the connections selected by the user when multiple connections are available
 * @member {module:model/CreateDevicesV2Payload.ConnectionTypeEnum} connection_type
 */
CreateDevicesV2Payload.prototype['connection_type'] = undefined;

/**
 * The fully qualified board name
 * @member {String} fqbn
 */
CreateDevicesV2Payload.prototype['fqbn'] = undefined;

/**
 * The friendly name of the device
 * @member {String} name
 */
CreateDevicesV2Payload.prototype['name'] = undefined;

/**
 * The serial uuid of the device
 * @member {String} serial
 */
CreateDevicesV2Payload.prototype['serial'] = undefined;

/**
 * The type of the device
 * @member {module:model/CreateDevicesV2Payload.TypeEnum} type
 */
CreateDevicesV2Payload.prototype['type'] = undefined;

/**
 * The user_id associated to the device. If absent it will be inferred from the authentication header
 * @member {String} user_id
 */
CreateDevicesV2Payload.prototype['user_id'] = undefined;

/**
 * The version of the NINA/WIFI101 firmware running on the device
 * @member {String} wifi_fw_version
 */
CreateDevicesV2Payload.prototype['wifi_fw_version'] = undefined;

/**
 * Allowed values for the <code>connection_type</code> property.
 * @enum {String}
 * @readonly
 */
CreateDevicesV2Payload['ConnectionTypeEnum'] = {
  /**
   * value: "wifi"
   * @const
   */
  "wifi": "wifi",
  /**
   * value: "eth"
   * @const
   */
  "eth": "eth",
  /**
   * value: "wifiandsecret"
   * @const
   */
  "wifiandsecret": "wifiandsecret",
  /**
   * value: "gsm"
   * @const
   */
  "gsm": "gsm",
  /**
   * value: "nb"
   * @const
   */
  "nb": "nb",
  /**
   * value: "lora"
   * @const
   */
  "lora": "lora"
};

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CreateDevicesV2Payload['TypeEnum'] = {
  /**
   * value: "mkrwifi1010"
   * @const
   */
  "mkrwifi1010": "mkrwifi1010",
  /**
   * value: "mkr1000"
   * @const
   */
  "mkr1000": "mkr1000",
  /**
   * value: "nano_33_iot"
   * @const
   */
  "nano_33_iot": "nano_33_iot",
  /**
   * value: "mkrgsm1400"
   * @const
   */
  "mkrgsm1400": "mkrgsm1400",
  /**
   * value: "mkrwan1310"
   * @const
   */
  "mkrwan1310": "mkrwan1310",
  /**
   * value: "mkrwan1300"
   * @const
   */
  "mkrwan1300": "mkrwan1300",
  /**
   * value: "mkrnb1500"
   * @const
   */
  "mkrnb1500": "mkrnb1500",
  /**
   * value: "lora-device"
   * @const
   */
  "lora-device": "lora-device",
  /**
   * value: "login_and_secretkey_wifi"
   * @const
   */
  "login_and_secretkey_wifi": "login_and_secretkey_wifi",
  /**
   * value: "envie_m7"
   * @const
   */
  "envie_m7": "envie_m7",
  /**
   * value: "nanorp2040connect"
   * @const
   */
  "nanorp2040connect": "nanorp2040connect",
  /**
   * value: "nicla_vision"
   * @const
   */
  "nicla_vision": "nicla_vision",
  /**
   * value: "phone"
   * @const
   */
  "phone": "phone",
  /**
   * value: "portenta_x8"
   * @const
   */
  "portenta_x8": "portenta_x8",
  /**
   * value: "opta"
   * @const
   */
  "opta": "opta",
  /**
   * value: "giga"
   * @const
   */
  "giga": "giga",
  /**
   * value: "generic_device_secretkey"
   * @const
   */
  "generic_device_secretkey": "generic_device_secretkey",
  /**
   * value: "portenta_c33"
   * @const
   */
  "portenta_c33": "portenta_c33",
  /**
   * value: "unor4wifi"
   * @const
   */
  "unor4wifi": "unor4wifi",
  /**
   * value: "nano_nora"
   * @const
   */
  "nano_nora": "nano_nora"
};
var _default = exports["default"] = CreateDevicesV2Payload;